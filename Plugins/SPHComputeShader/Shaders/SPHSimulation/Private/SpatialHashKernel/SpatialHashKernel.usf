#include "/Engine/Public/Platform.ush"
#include "../SpatialHash.usf"

int NumParticles;
float SmoothingRadius;

StructuredBuffer<float3> PredictedPositions;
RWStructuredBuffer<int> SpatialOffsets;
RWStructuredBuffer<int3> SpatialIndices;

[numthreads(THREADS_X, THREADS_Y, THREADS_Z)]
void SpatialHashKernel(
	uint3 DispatchThreadId : SV_DispatchThreadID,
	uint GroupIndex : SV_GroupIndex )
{
    int id = DispatchThreadId.x;
    if (id >= NumParticles)
        return;
    SpatialOffsets[id] = NumParticles;
    int3 cell = GetCell3D(PredictedPositions[id], SmoothingRadius);
    int hash = HashCell3D(cell);
    int key = KeyFromHash(hash, NumParticles);
    SpatialIndices[id] = int3(id, hash, key);
}